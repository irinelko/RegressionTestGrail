type Websites @aws_iam @aws_api_key {
  id: ID!
  Name: String
  Adress: String
  Owner: String
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelWebsitesConnection @aws_api_key @aws_iam {
  items: [Websites]
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

input ModelWebsitesFilterInput {
  id: ModelIDInput
  Name: ModelStringInput
  Adress: ModelStringInput
  Owner: ModelStringInput
  and: [ModelWebsitesFilterInput]
  or: [ModelWebsitesFilterInput]
  not: ModelWebsitesFilterInput
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

type Query {
  getWebsites(id: ID!): Websites @aws_api_key @aws_iam
  listWebsitess(filter: ModelWebsitesFilterInput, limit: Int, nextToken: String): ModelWebsitesConnection @aws_api_key @aws_iam
  syncWebsites(filter: ModelWebsitesFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelWebsitesConnection @aws_api_key @aws_iam
}

input CreateWebsitesInput {
  id: ID
  Name: String
  Adress: String
  Owner: String
  _version: Int
}

input UpdateWebsitesInput {
  id: ID!
  Name: String
  Adress: String
  Owner: String
  _version: Int
}

input DeleteWebsitesInput {
  id: ID
  _version: Int
}

type Mutation {
  createWebsites(input: CreateWebsitesInput!, condition: ModelWebsitesConditionInput): Websites @aws_api_key @aws_iam
  updateWebsites(input: UpdateWebsitesInput!, condition: ModelWebsitesConditionInput): Websites @aws_api_key @aws_iam
  deleteWebsites(input: DeleteWebsitesInput!, condition: ModelWebsitesConditionInput): Websites @aws_api_key @aws_iam
}

input ModelWebsitesConditionInput {
  Name: ModelStringInput
  Adress: ModelStringInput
  Owner: ModelStringInput
  and: [ModelWebsitesConditionInput]
  or: [ModelWebsitesConditionInput]
  not: ModelWebsitesConditionInput
}

type Subscription {
  onCreateWebsites: Websites @aws_subscribe(mutations: ["createWebsites"]) @aws_api_key @aws_iam
  onUpdateWebsites: Websites @aws_subscribe(mutations: ["updateWebsites"]) @aws_api_key @aws_iam
  onDeleteWebsites: Websites @aws_subscribe(mutations: ["deleteWebsites"]) @aws_api_key @aws_iam
}
